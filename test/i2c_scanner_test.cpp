/*
 * I2C Scanner Test –¥–ª—è PN532
 * –ü—Ä–æ—Å—Ç–µ–π—à–∏–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è PN532 –ø–æ I2C
 * 
 * –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï:
 * PN532    ESP32
 * ------   -----
 * VCC  ‚Üí   3.3V
 * GND  ‚Üí   GND
 * SDA  ‚Üí   GPIO 21
 * SCL  ‚Üí   GPIO 22
 */

#include <Arduino.h>
#include <Wire.h>

void setup() {
  Serial.begin(115200);
  Wire.begin(); // –ò—Å–ø–æ–ª—å–∑—É–µ—Ç GPIO 21 (SDA) –∏ GPIO 22 (SCL) –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  
  Serial.println("\n=== I2C Scanner Test –¥–ª—è PN532 ===");
  Serial.println("–ü–æ–∏—Å–∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –Ω–∞ I2C —à–∏–Ω–µ...");
  Serial.println("–û–∂–∏–¥–∞–µ–º—ã–π –∞–¥—Ä–µ—Å PN532: 0x24");
  Serial.println("=====================================\n");
}

void loop() {
  byte error, address;
  int nDevices = 0;
  
  Serial.println("–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ I2C —à–∏–Ω—ã...");
  
  for(address = 1; address < 127; address++) {
    Wire.beginTransmission(address);
    error = Wire.endTransmission();
    
    if (error == 0) {
      Serial.printf("‚úÖ I2C —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: 0x%02X", address);
      
      if (address == 0x24) {
        Serial.print(" <- PN532 NFC/RFID –º–æ–¥—É–ª—å!");
      }
      
      Serial.println();
      nDevices++;
    }
    else if (error == 4) {
      Serial.printf("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø–æ –∞–¥—Ä–µ—Å—É: 0x%02X\n", address);
    }
  }
  
  Serial.println("=====================================");
  
  if (nDevices == 0) {
    Serial.println("‚ùå –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ I2C –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!");
    Serial.println("\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ:");
    Serial.println("- VCC ‚Üí 3.3V");
    Serial.println("- GND ‚Üí GND");  
    Serial.println("- SDA ‚Üí GPIO 21");
    Serial.println("- SCL ‚Üí GPIO 22");
    Serial.println("- –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏ PN532 –≤ —Ä–µ–∂–∏–º I2C");
  }
  else {
    Serial.printf("‚úÖ –ù–∞–π–¥–µ–Ω–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤: %d\n", nDevices);
    
    if (nDevices == 1) {
      Serial.println("üéØ –ì–æ—Ç–æ–≤–æ –∫ –∑–∞–≥—Ä—É–∑–∫–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–¥–∞!");
    }
  }
  
  Serial.println("=====================================\n");
  delay(5000);
} 